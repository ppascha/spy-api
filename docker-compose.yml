services:
  postgres_db:
    image: postgres:15
    container_name: postgres_db
    restart: always  # Ensures database restarts if the container stops
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=spy_db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent storage for database
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Ensures schema/data initialization
    networks:
      - laravel_network

  redis_cache:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    ports:
      - 6379:6379
    networks:
      - laravel_network

  laravel_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: always
    environment:
      - APP_ENV=local
      - APP_KEY=base64:UyKmFEHc8QJ0fjOXgzmB7DkfQ+EbaGE4rGR0fNVTk24=
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_DATABASE=spy_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=yourpassword
    volumes:
      - .:/var/www
    networks:
      - laravel_network
    depends_on:
      - postgres_db
      - redis_cache

  nginx_server:
    image: nginx:alpine
    container_name: nginx_server
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www
    ports:
      - 8000:80
    networks:
      - laravel_network
    depends_on:
      - laravel_app

networks:
  laravel_network:
    driver: bridge

volumes:
  postgres_data:  # Persistent volume for PostgreSQL
